---
import { PUBLIC_GA_TRACKING_ID, ENABLE_LIGHTBOX } from '../server-constants.ts'
import { getDatabase } from '../lib/notion/client.ts'
import { getNavLink, getStaticFilePath, filePath } from '../lib/blog-helpers.ts'
import '../styles/syntax-coloring.css'
import GoogleAnalytics from '../components/GoogleAnalytics.astro'
import SearchModal from '../components/SearchModal.astro'
import SearchButton from '../components/SearchButton.astro'
import HeaderMenu from '../components/HeaderMenu.astro'

export interface Props {
  title: string
  description: string
  path: string
  ogImage: string
}

const { title = '', description = '', path = '/', ogImage = '' } = Astro.props

const database = await getDatabase()

const siteTitle = title ? `${title} - ${database.Title}` : database.Title
const siteDescription = description ? description : database.Description
const siteURL = new URL(getNavLink(path), Astro.site).toString()
const siteOGImage = new URL(
  getStaticFilePath('/default-og-image.png'),
  Astro.site
)

let customIconURL: string | undefined
if (database.Icon && 'Type' in database.Icon && 'Url' in database.Icon) {
  if (database.Icon.Type === 'file') {
    try {
      customIconURL = filePath(new URL(database.Icon.Url))
    } catch (err) {
      console.log('Invalid DB custom icon URL')
    }
  }
}
---

<!DOCTYPE html>
<html lang="en" prefix="og: https://ogp.me/ns#">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="max-image-preview:large" />
    <meta charset="UTF-8" />
    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
    <link rel="icon" type="image/x-icon" href="/images/icon.ico" />
    <link rel="shortcut icon" type="image/x-icon" href="/images/icon.ico" />
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2289997872727258" crossorigin="anonymous"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=M+PLUS+Rounded+1c:wght@400;500;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <meta name="description" content={siteDescription} />
    <link rel="canonical" href={siteURL} />
    <meta property="og:url" content={siteURL} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:site_name" content={database.Title} />
    <meta property="og:image" content={ogImage || siteOGImage} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content={ogImage || siteOGImage} />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
      integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
      crossorigin="anonymous"
    />
  </head>
  <body>
    <GoogleAnalytics trackingId={PUBLIC_GA_TRACKING_ID} />
    <HeaderMenu />
    <div class="main-container">
      <aside>
        <SearchButton />
        <slot name="aside" />
      </aside>

      <main>
        <div class="content">
          <header>
            <h1>
              <a href={getNavLink('/')}>
                {
                  database.Icon && 'Type' in database.Icon ? (
                    database.Icon.Type === 'emoji' && 'Emoji' in database.Icon ? (
                      <>
                        <span>{database.Icon.Emoji}</span>
                        {database.Title}
                      </>
                    ) : database.Icon.Type === 'external' && 'Url' in database.Icon ? (
                      <>
                        <img src={database.Icon.Url} alt="Site icon image" />
                        {database.Title}
                      </>
                    ) : database.Icon.Type === 'file' && customIconURL ? (
                      <>
                        <img
                          src={customIconURL}
                          class="custom-icon"
                          alt="Site icon image"
                        />
                        {database.Title}
                      </>
                    ) : (
                      database.Title
                    )
                  ) : (
                    database.Title
                  )
                }
              </a>
            </h1>
            <div class="description">
              {database.Description}
            </div>
          </header>

          <slot name="main" />

          <footer>
            <div>
              <span>Powered by&nbsp;</span>
              <a href="https://github.com/wildflowers315/notion-blog"
                >notion-blog</a
              >
            </div>
          </footer>
        </div>
      </main>
    </div>

    <SearchModal />
    {
      ENABLE_LIGHTBOX && (
        <script src={getStaticFilePath('/scripts/fslightbox.js')} />
      )
    }
  </body>
</html>

<style>
  :root {
    --header-height: 50px;
  }

  html,
  body {
    padding: 0;
    margin: 0;
    font-size: 16px;
  }

  body {
    min-height: 100vh;
    background: 
      linear-gradient(135deg, rgba(220, 255, 220, 0.568), rgba(220, 255, 220, 0.705)),
      url('/src/images/background.jpg') center/cover no-repeat fixed;
    color: var(--fg);
    font-family: var(--font-sans);
    background-blend-mode: luminosity;
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    overflow-x: hidden;
    -webkit-font-smoothing: antialiased;
    -webkit-text-size-adjust: 100%;
  }

  .main-container {
    display: flex;
    max-width: 1120px;
    margin: 0 auto;
    gap: 30px;
    align-items: flex-start;
    padding: 20px;
    position: relative;
    z-index: 1;
  }

  @media (max-width: 900px) {
    :root {
      --header-height: 45px;
    }

    .main-container {
      flex-direction: column;
      gap: 20px;
      padding: 20px 10px;
    }
  }

  main {
    flex: 1;
    order: 2;
    min-width: 0;
  }
  @media (max-width: 900px) {
    main {
      order: 1;
      width: 100%;
    }
  }

  aside {
    order: 1;
    width: 280px;
    padding: 25px 20px;
    background-color: rgba(240, 255, 240, 0.95);
    border-radius: var(--radius);
    box-shadow: 0 4px 15px rgba(66, 255, 140, 0.1);
    border: 3px solid rgba(66, 255, 140, 0.2);
  }
  @media (max-width: 900px) {
    aside {
      order: 2;
      width: 100%;
      position: static;
    }
  }
  
  div.content {
    padding: 30px 40px;
    background-color: rgba(240, 255, 240, 0.95);
    border-radius: var(--radius);
    box-shadow: 
      0 4px 15px rgba(66, 255, 140, 0.15),
      0 0 0 3px rgba(66, 255, 140, 0.1);
    border: 3px solid rgba(66, 255, 140, 0.2);
    overflow-wrap: break-word;
    position: relative;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
  }
  @media (max-width: 640px) {
    div.content {
      padding: 20px;
      border-radius: 8px;
    }
  }

  main header {
    padding: 20px 0 25px;
    text-align: center;
    position: relative;
  }
  main header::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 80%;
    height: 3px;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(66, 255, 140, 0.6),
      rgba(66, 255, 140, 0.8),
      rgba(66, 255, 140, 0.6),
      transparent
    );
    border-radius: 2px;
    box-shadow: 0 2px 4px rgba(66, 255, 140, 0.2);
  }
  main header h1 {
    font-weight: 700;
    font-size: 2.2rem;
    color: #42ff8c;
    text-shadow:
      1px 1px 0 #fff,
      -1px -1px 0 #fff,
      -1px 1px 0 #fff,
      1px -1px 0 #fff;
    letter-spacing: 0.02em;
    margin-bottom: 0.5rem;
    word-wrap: break-word;
    max-width: 100%;
  }
  main header h1 a {
    display: inline-block;
    color: inherit;
    transition: transform 0.2s ease;
    word-break: keep-all;
    max-width: 100%;
  }
  main header h1 a:hover {
    color: inherit;
    transform: scale(1.02);
  }
  main header h1 a span,
  main header h1 a img {
    display: inline-block;
    font-size: 1.1em;
  }
  main header h1 a span {
    margin-right: 0.3em;
    margin-left: -0.1rem;
  }
  main header h1 a img {
    width: 1.2em;
    height: 1.2em;
    margin-right: 0.2em;
    margin-left: -0.3rem;
    vertical-align: sub;
  }
  main header h1 a img.custom-icon {
    border-radius: var(--radius);
  }

  main header div.description {
    padding: 0.8rem 0;
    font-size: 0.95rem;
    color: var(--accents-1);
    line-height: 1.6;
    max-width: 100%;
    margin: 0 auto;
    position: relative;
    word-wrap: break-word;
    overflow-wrap: break-word;
    padding-left: 1rem;
    padding-right: 1rem;
  }
  main header div.description::before,
  main header div.description::after {
    content: 'âœ¿';
    color: var(--accents-2);
    opacity: 0.6;
    margin: 0 0.5rem;
    font-size: 0.8em;
  }

  main footer {
    margin: 30px 0 10px;
    text-align: center;
    font-size: 0.75rem;
  }
  @media (max-width: 640px) {
    main footer {
      margin: 20px 0;
    }
  }
  main footer span {
    color: #777;
  }
  main footer a {
    color: inherit;
    text-decoration: underline;
  }
</style>

<style is:global>
  :root {
    --header-height: 50px;
    --gap-quarter: 0.25rem;
    --gap-half: 0.5rem;
    --gap: 1rem;
    --gap-double: 2rem;

    --bg: #fff7e6;
    --fg: #2e7d32;
    --accents-1: #66bb6a;
    --accents-2: #81c784;
    --accents-3: #a5d6a7;
    --accents-4: #c8e6c9;
    --geist-foreground: #2e7d32;
    --geist-success: #388e3c;

    --radius: 16px;

    --font-sans: 'M PLUS Rounded 1c', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',
      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',
      'Helvetica Neue', sans-serif;
    --font-mono: SFMono-Regular, Menlo, Consolas, 'PT Mono', 'Liberation Mono',
      Courier, monospace;
  }

  * {
    box-sizing: border-box;
    word-break: break-word;
    overflow-wrap: break-word;
    word-wrap: break-word;
    -webkit-hyphens: auto;
    -ms-hyphens: auto;
    hyphens: auto;
  }

  figure {
    margin: 0;
    font-size: 0.85rem;
    color: #999;
    line-height: 1.8rem;
  }

  a {
    color: var(--accents-1);
    text-decoration: none;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    padding: 0 2px;
  }
  a:hover {
    color: var(--accents-2);
  }
  a:not(.no-decoration):hover::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(90deg,
      rgba(255, 140, 66, 0.3),
      rgba(255, 179, 71, 0.6),
      rgba(255, 140, 66, 0.3)
    );
    border-radius: 4px;
    animation: linkShine 1.5s ease-in-out infinite;
  }

  @keyframes linkShine {
    0% {
      opacity: 0.6;
      transform: scaleX(0.9);
    }
    50% {
      opacity: 0.8;
      transform: scaleX(1);
    }
    100% {
      opacity: 0.6;
      transform: scaleX(0.9);
    }
  }

  mark {
    padding: var(--gap-quarter);
    border-radius: var(--radius);
    background: linear-gradient(120deg, rgba(255, 209, 161, 0.4), rgba(255, 227, 196, 0.4));
  }

  h1 {
    margin: 0;
    color: var(--fg);
    font-size: 2rem;
    font-weight: 700;
  }

  @media (max-width: 900px) {
    :root {
      --header-height: 45px;
    }
  }

  @media (max-width: 640px) {
    h1 {
      font-size: 1.4rem;
      padding: 0 0.5rem;
    }
    main header div.description {
      font-size: 0.85rem;
      padding: 0.6rem 0.5rem;
    }
  }

  ol {
    color: #222;
    font-weight: 400;
    font-size: 0.9rem;
    line-height: 1.8rem;
  }
  p,
  ul {
    color: #222;
    font-weight: 400;
    font-size: 1rem;
    line-height: 1.8rem;
  }
  ul,
  ol {
    margin: 0;
    padding-inline-start: 1.5rem;
  }
  pre {
    margin: 0;
    white-space: pre;
    tab-size: 2;
  }
  pre :global(code) {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }

  hr {
    display: block;
    height: 1px;
    border: 0;
    margin: 0.3rem 0;
    background-color: #333;
  }

  code {
    font-size: 0.9rem;
    background: rgba(135, 131, 120, 0.15);
    color: #eb5757;
    padding: 0.25rem;
    border-radius: var(--radius);
    font-family: var(--font-mono);
  }

  table {
    display: block;
    overflow-x: auto;
    white-space: nowrap;
    border-collapse: collapse;
  }

  table tr {
    vertical-align: top;
  }

  table th {
    font-weight: 600;
    background-color: #f4f4f4;
  }

  table td,
  table th {
    font-size: 0.9rem;
    border: 1px solid #e4e4e4;
    padding: 0.5rem 1rem;
    text-align: left;
    line-height: 1.2rem;
  }
  table td::after {
    content: '';
    display: inline-block;
    min-height: 0.9rem;
  }
</style>